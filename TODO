TODO - hierarchical notes
-------------------------

- guibot publishing
    - README
    - wikis
    - build automation (travic CI) and documentation
- more and better unit tests
    - advanced unit tests to include all backend types (desktop control)?
    - apply hybrid backend to simplify some of them
- new methods test stage
    - various collected strange cases (special testing pairs)
    - training a button cascade requires even more experience
        - reuse haystack images and localize some OK buttons
        - current choice: larger variety and distance (to positives) of data
        - play around with parameters (data augmentation, training, etc.)
- other advancements
    - generate needle as difference of two images to create image variables
    - ignore subregions while template matching to define frames of matching
    - match on still haystack as a way to wait for some events to finish
    - conditional matching - match needle if no other needle is matched
    - purely visual vs also behavioral intelligence (GUI handling) - some
      reinforcement learning for behavioral intelligence in addition to image recognition
- teamfeat matching improvements - maximum difference between the similarity
  obtained from the template and from the feature matching in the hybrid case
  may prevent from abnormal results in any of the two matching subparts
- deep check all backends for errors and warnings, invalid deltas and ranges
- clicking target point - still reconsider whether to return the (0,0) needle point
  or its center since wild transformations are possible and defining the clicking point
  as (+n,+n) is not as consistent
